Bootstrap: docker
From: nvidia/cuda:12.4.1-cudnn-devel-ubuntu22.04


%post
    # Downloads the latest package lists (important).
    apt-get update -y
    # Runs apt-get while ensuring that there are no user prompts that would
    # cause the build process to hang.
    # python3-tk is required by matplotlib.
    # python3-dev is needed to install some packages.

# Set up some required environment defaults
apt-get -y update && apt-get -y install software-properties-common && yes '' | add-apt-repository ppa:deadsnakes/ppa
apt-get -y update && apt-get -y install locales
locale-gen en_US.UTF-8
DEBIAN_FRONTEND=noninteractive apt-get -y install keyboard-configuration
apt-get -y update && apt-get -y install make \
                                        dpkg \
                                        wget \
                                        bzip2 \
                                        libglib2.0-0 \
                                        libxext6 \
                                        libsm6 \
                                        libxrender1 \
                                        g++ \
                                        gcc \
                                        xvfb \
                                        libyaml-cpp-dev \
                                        git \
                                        cmake \
                                        vim \
                                        curl \
                                        ca-certificates \
                                        gdb \
                                        libopenexr-dev \
                                        zlib1g-dev \
                                        xserver-xorg \
                                        freeglut3-dev \
                                        mesa-utils \
                                        libreadline-dev \
                                        gnuplot \
                                        gnuplot-qt \
                                        unzip \
                                        libboost-all-dev \
                                        libsdl2-dev \
                                        libssl-dev \
                                        libpng-dev



cd /
wget https://bootstrap.pypa.io/get-pip.py
python3 get-pip.py
rm get-pip.py



python3 -m pip install -U setuptools
python3 -m pip install -U pyyaml
python3 -m pip install  transform3d \
                        matplotlib \
                        cffi \
                        Pillow \
                        h5py \
                        openexr \
                        requests \
                        tensorflow==2.16.1 \
                        tensorboardx==2.6.2.2 \
                        moviepy==1.0.3 \
                        tqdm==4.66.5 \
                        torch==2.4.1 \
                        torchvision==0.19.1 \
                        av==10.0.0 \
                        scipy \
                        lxml

# The following lines are for compiling chamferdist and the EMD package from source
export TORCH_CUDA_ARCH_LIST="7.0;7.5;8.0;8.6;9.0"
python3 -m pip install cuda-python==12.4.0
cd /
git clone https://github.com/krrish94/chamferdist/
cd chamferdist
python3 setup.py install
cd ..
rm -rf chamferdist


cd /
git clone https://github.com/ZirongLiu/EMDLoss-for-large-scale-point-clouds/
cd EMDLoss-for-large-scale-point-clouds
python3 setup.py install
cd ..
rm -rf EMDLoss-for-large-scale-point-clouds


%runscript
# Run command through entry point.



%environment
# Pipenv requires a certain terminal encoding.
        export LANG=C.UTF-8
        export LC_ALL=C.UTF-8
        # This configures Pipenv to store the packages in the current working directory.
        export PIPENV_VENV_IN_PROJECT=1
        export DISPLAY=:99.0

        export MKL_NUM_THREADS=12
        export NUMEXPR_NUM_THREADS=12
        export OMP_NUM_THREADS=12
        export OPENBLAS_NUM_THREADS=12
        export VECLIB_MAXIMUM_THREADS=12
